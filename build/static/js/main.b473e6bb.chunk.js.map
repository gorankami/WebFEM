{"version":3,"sources":["components/SelectPalette.js","components/LegendView.js","drawLegend.js","webgl/Camera.js","webgl/GL.js","webgl/ShaderProgram.js","webgl/3DObjects/MeshColoured/shaders.js","webgl/3DObjects/MeshColoured/index.js","webgl/3DObjects/MeshWireframe/shaders.js","webgl/3DObjects/MeshWireframe/index.js","webgl/Renderer.js","webgl/TransformationController.js","webgl/FEMView.js","components/MeshView.js","webgl/Color.js","services/api/index.js","services/utilities/index.js","components/BtnApplyToMesh.js","components/App.js","serviceWorker.js","index.js"],"names":["SelectPalette","props","palettes","length","options","map","item","react_default","a","createElement","value","id","selected","selectedPalette","name","onChange","e","onPaletteChange","target","LegendView","this","palette","context","colorMap","isInverted","stepsLength","steps","gradient","createLinearGradient","startY","colorStopPercentage","toFixed","tickHeight","fillStyle","fillRect","strokeStyle","i","addColorStop","color","getStyle","beginPath","moveTo","startX","lineTo","stroke","font","ypos","Math","round","xpos","fillText","scaledVal","drawLegend","refs","canvas","getContext","width","height","ref","Component","Camera","verFoV","aspect","nearPlane","farPlane","position","Object","classCallCheck","horFoV","pMatrix","mat4","create","mvMatrix","identity","recalibrate","perspective","pivot","xPercentage","yPercentage","objectZ","hor","ver","PI","xNear","sin","cos","yNear","GLService","init","alert","createShader","srcVertex","srcFragment","GL","vertexShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","fragmentShaderSource","vertexShaderSource","MeshColoured","aVertexPosition","aVertexColor","uMVMatrix","uPMatrix","vertexBuffer","indexBuffer","colorBuffer","enabled","useProgram","getAttribLocation","getUniformLocation","createBuffer","mesh","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","vertexData","DYNAMIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","indexData","arrayLength","colorData","uniformMatrix4fv","enableVertexAttribArray","vertexAttribPointer","FLOAT","polygonOffset","enable","POLYGON_OFFSET_FILL","drawElements","TRIANGLES","UNSIGNED_SHORT","disable","flush","MeshWireframe","edgeData","LINES","Renderer","modelLoaded","meshColoured","meshWireframe","tMCP","prepareProgram","camera","cvsWidth","cvsHeight","rotation","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","clearScene","viewport","transformationMatrixModel","translate","rotateX","rotateY","render","TransformationController","mouseS","rotS","panS","mouse","rot","pan","zoom","rotationSensitivity","zoomSpeed","rotationMomentum","reset","coords","getClickVectorHorizontal","normalizeAngle","delta","startPos","angle","FEMView","cvsFEM","vec3","transformationController","renderer","resize","window","innerWidth","innerHeight","initEvents","animate","$","document","bind","addEventListener","event","preventDefault","scope","mouseMove","rect","getBoundingClientRect","clientX","left","clientY","top","buttons","doRotate","doPan","requestAnimationFrame","mouseOut","removeEventListener","mouseWheel","stopPropagation","undefined","wheelDelta","doZoom","detail","startRotate","startPan","changePerspective","geometry","vector","prepare","update","maxFrontSize","max","maxX","minX","maxY","minY","minZ","maxZ","MeshView","femView","recalibrateCamera","draw","THREE","require","getPalettes","fetch","then","defaultHandler","GetPalletesResponse","response","forEach","step","Color","getMesh","meshName","ok","json","Error","prepareVector","min","colorArray","colors","vectorData","getColorFromArray","r","g","b","initColorArray","numColors","minValue","maxValue","inverted","stepVal","minColor","setHex","getHexString","maxColor","lerp","unshift","push","alpha","array","colorPosition","scalePaletteColorValues","newSteps","objectSpread","BtnApplyToMesh","class","onClick","_props$data","data","numSteps","onApplyToMesh","palettesCopy","ex","message","applyToMesh","App","state","toggleCurtain","_this","setState","find","onStepsChange","onInvertedChange","_this2","className","type","components_LegendView","components_MeshView","Boolean","location","hostname","match","ReactDOM","src_components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b473e6bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//in:\r\n  //palettes\r\n  //selectedPalette\r\n//out:\r\n  //onPaletteChange\r\n\r\nexport default function (props){\r\n  if(props.palettes && props.palettes.length){ \r\n      const options = props.palettes.map(item=>{\r\n        return  (\r\n          <option value={item.id} selected={props.selectedPalette && props.selectedPalette.id === item.id}>\r\n              {item.name}\r\n          </option>\r\n        );\r\n      });\r\n      return (\r\n        <select onChange={(e)=>props.onPaletteChange(e.target.value)}>\r\n          {options}\r\n        </select>\r\n      );\r\n  }\r\n  return <select></select>\r\n}\r\n","import React, {Component} from \"react\";\r\nimport drawLegend from \"../drawLegend\";\r\n\r\nclass LegendView extends Component {\r\n  \r\n  componentDidUpdate(){\r\n    if(this.props.palette){\r\n      const canvas = this.refs.canvas;\r\n      const context = canvas.getContext(\"2d\");\r\n      drawLegend(context, this.props.palette, this.props.isInverted);\r\n    }\r\n  }\r\n  render(props){\r\n    return (\r\n      <canvas width='150' height='500' ref=\"canvas\"></canvas>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LegendView;","export default function(context, colorMap, isInverted) {\r\n    const startX = 25,\r\n      startY = 25,\r\n      width = 50,\r\n      height = 450,\r\n      stepsLength = colorMap.steps.length,\r\n      gradient = isInverted ?\r\n      context.createLinearGradient(0, startY, 0, startY + height) :\r\n      context.createLinearGradient(0, startY + height, 0, startY),\r\n      colorStopPercentage = 1 / (stepsLength - 1).toFixed(2),\r\n      tickHeight = (height + 1) / (stepsLength - 1).toFixed(2);\r\n\r\n    context.fillStyle = \"Black\";\r\n    context.fillRect(0, 0, 150, 500);\r\n    context.strokeStyle = \"White\";\r\n\r\n    for (let i = 0; i < stepsLength; i++) {\r\n      gradient.addColorStop(i * colorStopPercentage, colorMap.steps[i].color.getStyle());\r\n    }\r\n    context.fillStyle = gradient;\r\n    context.fillRect(startX, startY, width, height);\r\n\r\n    //table border\r\n    context.beginPath();\r\n    context.moveTo(startX - 0.5, startY - 0.5);\r\n    context.lineTo(startX + width + 0.5, startY - 0.5);\r\n    context.lineTo(startX + width + 0.5, startY + height + 0.5);\r\n    context.lineTo(startX - 0.5, startY + height + 0.5);\r\n    context.lineTo(startX - 0.5, startY - 0.5);\r\n    context.stroke();\r\n    // ...and ticks\r\n    context.beginPath();\r\n    context.font = \"10px Verdana\";\r\n    context.fillStyle = \"White\";\r\n\r\n    for (let i = 0; i < stepsLength; i++) {\r\n      let xpos = startX + width;\r\n      let ypos = Math.round(startY + tickHeight * (stepsLength - 1 - i)) - 0.5;\r\n      context.moveTo(xpos - 5.5, ypos);\r\n      context.lineTo(xpos + 5.5, ypos);\r\n      context.fillText(colorMap.steps[i].scaledVal ? colorMap.steps[i].scaledVal.toFixed(4) : 0, xpos + 10, ypos + 4);\r\n    }\r\n    context.stroke();\r\n  }","/**\r\n Copyright 2014 Goran Antic\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * Helpful camera class that holds transformation matrices and transformation utilities, simulating camera/eye\r\n * @author Goran Antic\r\n */\r\n\r\nimport mat4 from 'gl-matrix-mat4';\r\n\r\nexport default class Camera {\r\n\r\n  /**\r\n   * Contructor for Camera. Sets projection properties, calculates horizontal field of view,\r\n   * and inits projection and model-view matrix as well as camera position in scene space.\r\n   * @param {Number} verFoV - vertical field of view\r\n   * @param {Number} aspect - aspect ratio of view\r\n   * @param {Number} nearPlane - near plane of view frustum\r\n   * @param {Number} farPlane - far plane of view frustum\r\n   * @param {Array} position - camera position in 3D space\r\n   */\r\n  constructor(verFoV, aspect, nearPlane, farPlane, position) {\r\n    this.verFoV   = verFoV;\r\n    this.horFoV   = verFoV * aspect;\r\n    this.aspect   = aspect;\r\n    this.pMatrix  = mat4.create();\r\n    this.mvMatrix = mat4.create();\r\n    mat4.identity(this.mvMatrix);\r\n    this.recalibrate(nearPlane, farPlane, position, [0, 0, 0]);\r\n  }\r\n\r\n  /**\r\n   * Changes perspective matrix by given width and height\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  changePerspective(width, height) {\r\n    this.aspect = width / height;\r\n    mat4.perspective(this.pMatrix, this.verFoV, this.aspect, this.nearPlane, this.farPlane);\r\n    this.horFoV = this.verFoV * this.aspect;\r\n  }\r\n\r\n  /**\r\n   * Moves the camera to a new position and sets up near and far plane distances\r\n   * @param {Number} position - 3 member array that represents x, y and z\r\n   * @param {Number} nearPlane - distance of nearPlane from camera\r\n   * @param {Number} farPlane - distance of farPlane from camera\r\n   * @param {Array} pivot\r\n   */\r\n  recalibrate(nearPlane, farPlane, position, pivot) {\r\n    this.position  = position;\r\n    this.pivot     = pivot;\r\n    this.nearPlane = nearPlane;\r\n    this.farPlane  = farPlane;\r\n\r\n    mat4.perspective(this.pMatrix, this.verFoV, this.aspect, nearPlane, farPlane);\r\n  }\r\n\r\n  /**\r\n   * Should unproject a click from a screen (near plane) to paralel plane defined with objects z position.\r\n   * @param {Number} xPercentage - percentage of horizontal field of view (half of it) which is clicked\r\n   * @param {Number} yPercentage - percentage of vertical field of view (half of it) which is clicked\r\n   * @param {Number} objectZ - object z coordinate in space\r\n   * @type {Array} returns array containing x and y clicked coordinates on z plane\r\n   */\r\n  getClickVectorHorizontal(xPercentage, yPercentage, objectZ) {\r\n    //get angles by percentage of field of view angles. Half is because we need a triangle with z as side\r\n    let hor     = (xPercentage * this.horFoV / 2),\r\n        ver     = (yPercentage * this.verFoV / 2);\r\n    //Math.sin uses radians, so we need to convert from degrees\r\n    hor *= (Math.PI / 180);\r\n    ver *= (Math.PI / 180);\r\n    //get coordinates on near plane\r\n    const xNear = this.nearPlane * Math.sin(hor) / Math.cos(hor);\r\n    const yNear = -this.nearPlane * Math.sin(ver) / Math.cos(ver);\r\n    //return xNear;\r\n    return [\r\n      xNear * (-this.position[2] - objectZ),\r\n      yNear * (-this.position[2] - objectZ)\r\n    ];\r\n  }\r\n}\r\n","const GLService = {\r\n  context: null,\r\n  init: init\r\n};\r\n\r\nfunction init(canvas) {\r\n  try {\r\n    GLService.context = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\n    if (!GLService.context) {\r\n      alert(\"Your browser does not support Webgl, the application will not work.\");\r\n    }\r\n  } catch (e) {\r\n    alert(\"Error in retrieving WebGL, your browser might not support Webgl.\");\r\n  }\r\n}\r\n\r\nexport default GLService;\r\n","/**\r\n Copyright 2014 Goran Antic\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\nimport GLService from './GL';\r\n\r\nexport const createShader = function (srcVertex, srcFragment) {\r\n  const GL = GLService.context;\r\n\r\n  //compile the vertex shader\r\n  const vertexShader = GL.createShader(GL.VERTEX_SHADER);\r\n  GL.shaderSource(vertexShader, srcVertex);\r\n  GL.compileShader(vertexShader);\r\n  if (!GL.getShaderParameter(vertexShader, GL.COMPILE_STATUS)) {\r\n    alert(\"Error compiling shader: \" + GL.getShaderInfoLog(vertexShader));\r\n  }\r\n\r\n  const fragmentShader = GL.createShader(GL.FRAGMENT_SHADER);\r\n  GL.shaderSource(fragmentShader, srcFragment);\r\n  GL.compileShader(fragmentShader);\r\n  if (!GL.getShaderParameter(fragmentShader, GL.COMPILE_STATUS)) {\r\n    alert(\"Error compiling shader: \" + GL.getShaderInfoLog(fragmentShader));\r\n  }\r\n\r\n  const program = GL.createProgram();\r\n  GL.attachShader(program, vertexShader);\r\n  GL.attachShader(program, fragmentShader);\r\n  GL.linkProgram(program);\r\n  if (!GL.getProgramParameter(program, GL.LINK_STATUS)) {\r\n    alert(\"Unable to initialize the shader program.\");\r\n    return;\r\n  }\r\n  return program;\r\n};\r\n","export const fragmentShaderSource = `\r\n  varying lowp vec4 vColor;\r\n  varying highp float vPosX;\r\n  void main(void) {\r\n    gl_FragColor = vColor;\r\n  }\r\n  `;\r\n\r\nexport const vertexShaderSource = `\r\n  attribute vec3 aVertexPosition;\r\n  attribute vec3 aVertexColor;\r\n  uniform mat4 uMVMatrix;\r\n  uniform mat4 uPMatrix;\r\n  varying lowp vec4 vColor;\r\n  varying highp float vPosX;\r\n  void main(void) {\r\n    vPosX = vec4(aVertexPosition , 1.0)[0];\r\n    gl_Position = uPMatrix * (uMVMatrix * vec4(aVertexPosition, 1.0));\r\n    vColor = vec4(aVertexColor, 1.0);\r\n  }\r\n`;","import {createShader} from '../../ShaderProgram';\r\nimport GLService from '../../GL';\r\nimport { vertexShaderSource, fragmentShaderSource } from './shaders';\r\n// import vertexShaderSource from \"./vertex.glsl\";\r\n// import fragmentShaderSource from \"./fragment.glsl\";\r\n\r\n\r\n\r\nexport default class MeshColoured {\r\n  constructor() {\r\n    this.program         = null;\r\n    this.aVertexPosition = null;\r\n    this.aVertexColor    = null;\r\n    this.uMVMatrix       = null;\r\n    this.uPMatrix        = null;\r\n    this.vertexBuffer    = null;\r\n    this.indexBuffer     = null;\r\n    this.colorBuffer     = null;\r\n\r\n    this.enabled = true;\r\n\r\n    const GL                 = GLService.context;\r\n\r\n    this.program = createShader(vertexShaderSource, fragmentShaderSource);\r\n    GL.useProgram(this.program);\r\n\r\n    //prepare variables and buffers\r\n    this.aVertexPosition = GL.getAttribLocation(this.program, \"aVertexPosition\");\r\n    this.aVertexColor    = GL.getAttribLocation(this.program, \"aVertexColor\");\r\n    this.uMVMatrix       = GL.getUniformLocation(this.program, \"uMVMatrix\");\r\n    this.uPMatrix        = GL.getUniformLocation(this.program, \"uPMatrix\");\r\n\r\n    this.vertexBuffer = GL.createBuffer();\r\n    this.indexBuffer  = GL.createBuffer();\r\n    this.colorBuffer  = GL.createBuffer();\r\n  }\r\n\r\n\r\n  prepareProgram(mesh) {\r\n    const GL = GLService.context;\r\n    GL.useProgram(this.program);\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.vertexBuffer);\r\n    GL.bufferData(GL.ARRAY_BUFFER, new Float32Array(mesh.vertexData), GL.DYNAMIC_DRAW);\r\n\r\n    GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    GL.bufferData(GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(mesh.indexData), GL.DYNAMIC_DRAW);\r\n    this.indexBuffer.arrayLength = mesh.indexData.length;\r\n\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.colorBuffer);\r\n    GL.bufferData(GL.ARRAY_BUFFER, new Float32Array(mesh.colorData), GL.DYNAMIC_DRAW);\r\n  }\r\n\r\n  render(pMatrix, mvMatrix) {\r\n    const GL = GLService.context;\r\n    GL.useProgram(this.program);\r\n    GL.uniformMatrix4fv(this.uPMatrix, false, pMatrix);\r\n    GL.uniformMatrix4fv(this.uMVMatrix, false, mvMatrix);\r\n\r\n    GL.enableVertexAttribArray(this.aVertexPosition);\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.vertexBuffer);\r\n    GL.vertexAttribPointer(this.aVertexPosition, 3, GL.FLOAT, false, 0, 0);\r\n\r\n    GL.enableVertexAttribArray(this.aVertexColor);\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.colorBuffer);\r\n    GL.vertexAttribPointer(this.aVertexColor, 3, GL.FLOAT, false, 0, 0);\r\n\r\n    GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    GL.polygonOffset(2.0, 2.0);\r\n    GL.enable(GL.POLYGON_OFFSET_FILL);\r\n    GL.drawElements(GL.TRIANGLES, this.indexBuffer.arrayLength, GL.UNSIGNED_SHORT, 0);\r\n    GL.disable(GL.POLYGON_OFFSET_FILL);\r\n    GL.flush();\r\n  }\r\n}\r\n","export const fragmentShaderSource = `\r\n  void main(void) {\r\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\r\n  }\r\n  `;\r\n\r\nexport const vertexShaderSource = `\r\n  attribute vec3 aVertexPosition;\r\n  uniform mat4 uMVMatrix;\r\n  uniform mat4 uPMatrix;\r\n  varying highp float vPosX;\r\n  void main(void) {\r\n    vPosX = vec4(aVertexPosition , 1.0)[0];\r\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r\n  }\r\n`;","import {createShader} from '../../ShaderProgram';\r\nimport GLService from '../../GL';\r\n// import vertexShaderSource from \"./vertex.glsl\";\r\n// import fragmentShaderSource from \"./fragment.glsl\";\r\n\r\nimport { vertexShaderSource, fragmentShaderSource } from './shaders';\r\n\r\nexport default class MeshWireframe {\r\n\r\n  constructor() {\r\n    this.aVertexPosition = null;\r\n    this.uMVMatrix       = null;\r\n    this.uPMatrix        = null;\r\n    this.vertexBuffer    = null;\r\n    this.indexBuffer     = null;\r\n\r\n    this.enabled = true;\r\n\r\n    const GL = GLService.context;\r\n\r\n\r\n    this.program = createShader(vertexShaderSource, fragmentShaderSource);\r\n    GL.useProgram(this.program);\r\n\r\n    //prepare variables and buffers\r\n    this.aVertexPosition = GL.getAttribLocation(this.program, \"aVertexPosition\");\r\n    this.uMVMatrix       = GL.getUniformLocation(this.program, \"uMVMatrix\");\r\n    this.uPMatrix        = GL.getUniformLocation(this.program, \"uPMatrix\");\r\n\r\n    this.vertexBuffer = GL.createBuffer();\r\n    this.indexBuffer  = GL.createBuffer();\r\n  }\r\n\r\n\r\n  prepareProgram(mesh) {\r\n    const GL = GLService.context;\r\n    GL.useProgram(this.program);\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.vertexBuffer);\r\n    GL.bufferData(GL.ARRAY_BUFFER, new Float32Array(mesh.vertexData), GL.DYNAMIC_DRAW);\r\n\r\n    GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    GL.bufferData(GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(mesh.edgeData), GL.DYNAMIC_DRAW);\r\n    this.indexBuffer.arrayLength = mesh.edgeData.length;\r\n  }\r\n\r\n  render(pMatrix, mvMatrix) {\r\n    const GL = GLService.context;\r\n    GL.useProgram(this.program);\r\n    GL.uniformMatrix4fv(this.uPMatrix, false, pMatrix);\r\n    GL.uniformMatrix4fv(this.uMVMatrix, false, mvMatrix);\r\n\r\n    GL.enableVertexAttribArray(this.aVertexPosition);\r\n    GL.bindBuffer(GL.ARRAY_BUFFER, this.vertexBuffer);\r\n    GL.vertexAttribPointer(this.aVertexPosition, 3, GL.FLOAT, false, 0, 0);\r\n\r\n    GL.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    GL.drawElements(GL.LINES, this.indexBuffer.arrayLength, GL.UNSIGNED_SHORT, 0);\r\n    GL.flush();\r\n  }\r\n}\r\n","/**\r\n Copyright 2014 Goran Antic\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\nimport mat4 from 'gl-matrix-mat4';\r\nimport MeshColoured from './3DObjects/MeshColoured';\r\nimport MeshWireframe from './3DObjects/MeshWireframe';\r\nimport GLService from './GL';\r\n\r\nexport default class Renderer {\r\n\r\n  constructor() {\r\n    this.modelLoaded   = false;\r\n    this.meshColoured  = new MeshColoured();\r\n    this.meshWireframe = new MeshWireframe();\r\n  }\r\n\r\n  prepare(mesh) {\r\n    this.modelLoaded = false;\r\n\r\n    const tMCP = [];\r\n\r\n    this.meshColoured.prepareProgram(mesh, null, tMCP);\r\n    this.meshWireframe.prepareProgram(mesh, null, tMCP);\r\n    this.modelLoaded = true;\r\n  }\r\n\r\n  render(camera, cvsWidth, cvsHeight, position, rotation) {\r\n    const GL = GLService.context;\r\n    clearScene();\r\n    if (this.modelLoaded) {\r\n      GL.viewport(0, 0, cvsWidth, cvsHeight);\r\n\r\n      const transformationMatrixModel = mat4.create(camera.mvMatrix);\r\n      mat4.translate(transformationMatrixModel, transformationMatrixModel, camera.position);\r\n      mat4.translate(transformationMatrixModel, transformationMatrixModel, [position[0] / 10, position[1] / 10, position[2]], transformationMatrixModel);\r\n\r\n      //moves mesh with center to the origin so it can be rotated\r\n      mat4.translate(transformationMatrixModel, transformationMatrixModel, camera.pivot);\r\n      mat4.rotateX(transformationMatrixModel, transformationMatrixModel, rotation[0]);\r\n      mat4.rotateY(transformationMatrixModel, transformationMatrixModel, rotation[1]);\r\n      //move back to the viewing position\r\n      mat4.translate(transformationMatrixModel, transformationMatrixModel, [-camera.pivot[0], -camera.pivot[1], -camera.pivot[2]]);\r\n\r\n      this.meshColoured.render(camera.pMatrix, transformationMatrixModel);\r\n      this.meshWireframe.render(camera.pMatrix, transformationMatrixModel);\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearScene() {\r\n  const GL = GLService.context;\r\n  GL.clearColor(0, 0, 0, 1.0);\r\n  GL.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\r\n  GL.enable(GL.DEPTH_TEST);\r\n}","/**\r\n Copyright 2014 Goran Antic\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @author Goran Antic\r\n * Needs Camera.js to be loaded\r\n *\r\n * TransformationController is based on OrbitControls.js (http://threejs.org/examples/#misc_controls_orbit) created by following authors (thanks):\r\n * @author qiao / https://github.com/qiao\r\n * @author mrdoob / http://mrdoob.com\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author erich666 / http://erichaines.com\r\n *\r\n * the main difference is the use of WebGL instead of threejs and model geometry transformation instead of camera transformation,\r\n * although camera is still needed to unproject clicks on the object plane\r\n */\r\n\r\nexport default class TransformationController {\r\n\r\n  constructor(canvas, camera) {\r\n    //transformations on object\r\n    this.rotation = null;\r\n    this.position = null;\r\n\r\n    //initial vectors for mouse position, rotation and pan value\r\n    this.mouseS = null;\r\n    this.rotS   = null;\r\n    this.panS   = null;\r\n\r\n    //current vectors for mouse position, rotation, pan value and zoom\r\n    this.mouse = null;\r\n    this.rot   = null;\r\n    this.pan   = null;\r\n    this.zoom  = 0;\r\n\r\n    //settings that change sensitivity of rotation and zoom\r\n    this.rotationSensitivity = 0.01;\r\n    this.zoomSpeed           = 1.0;\r\n\r\n    //rotation effect of momentum. 1 = no momentum, <1 added momentum.\r\n    this.rotationMomentum = 1;\r\n\r\n    this.canvas = canvas;\r\n    this.camera = camera;\r\n    this.reset();\r\n  }\r\n\r\n\r\n  /**\r\n   * Updates transformations. Should be called at every animation frame BEFORE canvas rendering\r\n   */\r\n  update() {\r\n    this.rotation[0] += (this.rot[1] - this.rotation[0]) * this.rotationMomentum;\r\n    this.rotation[1] += (this.rot[0] - this.rotation[1]) * this.rotationMomentum;\r\n    this.position[0] = this.pan[0] - this.panS[0];\r\n    this.position[1] = this.pan[1] - this.panS[1];\r\n    this.position[2] = this.zoom;\r\n  }\r\n\r\n  /**\r\n   * Initializes panning operation by setting panS and pan to a unprojected coordinate from mouse click to objects plane.\r\n   * Afterwards, panS is set to an offset from position\r\n   * @param {Number[2]} coords\r\n   */\r\n  startPan(coords) {\r\n    const hor = (coords[0] - (this.canvas.width / 2)) / (this.canvas.width / 2);\r\n    const ver = (coords[1] - (this.canvas.height / 2)) / (this.canvas.height / 2);\r\n    this.panS = this.camera.getClickVectorHorizontal(hor, ver, this.position[2]);\r\n    this.pan  = [this.panS[0], this.panS[1]];\r\n\r\n    this.panS[0] -= this.position[0];\r\n    this.panS[1] -= this.position[1];\r\n  }\r\n\r\n  /**\r\n   * Sets new current clicked unprojected coordinate on objects plane\r\n   * @param {Number[2]} coords\r\n   */\r\n  doPan(coords) {\r\n    const hor = (coords[0] - (this.canvas.width / 2)) / (this.canvas.width / 2);\r\n    const ver = (coords[1] - (this.canvas.height / 2)) / (this.canvas.height / 2);\r\n    this.pan  = this.camera.getClickVectorHorizontal(hor, ver, this.position[2]);\r\n  }\r\n\r\n  /**\r\n   * Starts rotation by putting rotS to previously current value rot. mouseS is kept for later difference calculation\r\n   * @param {Number[2]} coords\r\n   */\r\n  startRotate(coords) {\r\n    this.mouseS  = coords;\r\n    this.rotS[0] = this.rot[0];\r\n    this.rotS[1] = this.rot[1];\r\n  }\r\n\r\n  /**\r\n   * Rotates by putting rotS to previously current value rot. mouseS is kept for later difference calculation\r\n   * @param {Number[2]} coords\r\n   */\r\n  doRotate(coords) {\r\n    this.mouse = coords;\r\n\r\n    this.rot[1] = this.rot[1] + this.mouse[1] - this.mouseS[1];\r\n    this.rot[1] *= this.rotationSensitivity;\r\n    this.rot[1] += this.rotS[1];\r\n    this.rot[1] = normalizeAngle(this.rot[1]);\r\n\r\n    //if (this.rot[1] >= Math.PI / 2 || this.rot[1] <= -Math.PI / 2) {\r\n    //    this.rot[0] = this.rot[0] - this.mouse[0] + this.mouseS[0];\r\n    //} else {\r\n    this.rot[0] = this.rot[0] + this.mouse[0] - this.mouseS[0];\r\n    //}\r\n    this.rot[0] *= this.rotationSensitivity;\r\n    this.rot[0] += this.rotS[0];\r\n    this.rot[0] = normalizeAngle(this.rot[0]);\r\n    //limits rotation on x axis (flip) by frame of 180 degrees, so the max would display top side and min would display bottom of the object\r\n    //if (this.rot[1] >= Math.PI / 2) this.rot[1] = Math.PI / 2;\r\n    //if (this.rot[1] <= -Math.PI / 2) this.rot[1] = -Math.PI / 2;\r\n  }\r\n\r\n\r\n  /**\r\n   * Zooms in/out to the object (translates closer/farther of the camera) by a step. POsitive step zooms in, negative step zooms out\r\n   * @param {Number[2]} coords\r\n   */\r\n  doZoom(delta) {\r\n    if (delta > 0) {\r\n      this.zoom += this.zoomSpeed;\r\n    } else {\r\n      this.zoom -= this.zoomSpeed;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Puts all transformation and helpful coordinates to default values\r\n   */\r\n  reset() {\r\n    this.rotation = [0, 0, 0];\r\n    this.position = [0, 0, 0];\r\n    this.startPos = [0, 0];\r\n    this.mouseS   = [0, 0];\r\n    this.rotS     = [0, 0];\r\n    this.panS     = [0, 0];\r\n\r\n    this.mouse = [0, 0];\r\n    this.rot   = [0, 0];\r\n    this.pan   = [0, 0];\r\n\r\n    this.zoom = 0;\r\n  }\r\n}\r\n\r\n//normalize angle within -Pi and +Pi\r\nfunction normalizeAngle(angle) {\r\n  if (angle >= Math.PI * 2) return angle - Math.PI * 2;\r\n  if (angle <= -Math.PI * 2) return angle + Math.PI * 2;\r\n  return angle;\r\n}","/**\r\n Copyright 2014 Goran Antic\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\nimport $ from 'jquery';\r\nimport vec3 from 'gl-matrix-vec3';\r\nimport Camera from './Camera';\r\nimport Renderer from './Renderer';\r\nimport TransformationController from './TransformationController';\r\n\r\nexport default class FEMView {\r\n\r\n  init(canvas) {\r\n    this.cvsFEM = canvas;\r\n    this.camera = new Camera(45, this.cvsFEM.width / this.cvsFEM.height, 1, 100.0, vec3.create([0, 0, -10]));\r\n    this.transformationController = new TransformationController(this.cvsFEM, this.camera);\r\n    this.renderer = new Renderer();\r\n    this.resize(window.innerWidth, window.innerHeight);\r\n    this.initEvents();\r\n    this.animate();\r\n  }\r\n\r\n  initEvents() {\r\n    //events\r\n    $(window).resize(function () {\r\n      this.resize($(document).width(), $(document).height());\r\n    }.bind(this));\r\n\r\n    //disable context menu\r\n    this.cvsFEM.addEventListener('contextmenu', function (event) {\r\n      event.preventDefault();\r\n    });\r\n\r\n    const scope = this;\r\n    //mouse events\r\n    const mouseMove = function (event) {\r\n      event.preventDefault();\r\n      const rect = scope.cvsFEM.getBoundingClientRect();\r\n      const coords = [event.clientX - rect.left, event.clientY - rect.top];\r\n\r\n      if (event.buttons === 1) {\r\n        scope.transformationController.doRotate(coords);\r\n      } else if (event.buttons === 2) {\r\n        scope.transformationController.doPan(coords);\r\n      }\r\n\r\n      requestAnimationFrame(scope.animate.bind(scope), scope.cvsFEM);\r\n    };\r\n\r\n    const mouseDown = function (event) {\r\n      event.preventDefault();\r\n      const rect = scope.cvsFEM.getBoundingClientRect();\r\n      const coords = [event.clientX - rect.left, event.clientY - rect.top];\r\n\r\n      if (event.buttons === 1) {\r\n        scope.transformationController.startRotate(coords);\r\n      } else if (event.buttons === 2) {\r\n        scope.transformationController.startPan(coords);\r\n      }\r\n\r\n      //add events to detect while mouse down\r\n      scope.cvsFEM.addEventListener('mousemove', mouseMove, false);\r\n      scope.cvsFEM.addEventListener('mouseup', mouseOut, false);\r\n      scope.cvsFEM.addEventListener('mouseout', mouseOut, false);\r\n\r\n      requestAnimationFrame(scope.animate.bind(scope), scope.cvsFEM);\r\n    };\r\n\r\n    const mouseOut = function () {\r\n      scope.cvsFEM.removeEventListener('mousemove', mouseMove, false);\r\n      scope.cvsFEM.removeEventListener('mouseup', mouseOut, false);\r\n      scope.cvsFEM.removeEventListener('mouseout', mouseOut, false);\r\n\r\n      requestAnimationFrame(scope.animate.bind(scope), scope.cvsFEM);\r\n    };\r\n\r\n    const mouseWheel = function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      if (event.wheelDelta !== undefined) { // WebKit / Opera / Explorer 9\r\n        scope.transformationController.doZoom(event.wheelDelta);\r\n      } else if (event.detail !== undefined) { // Firefox\r\n        scope.transformationController.doZoom(-event.detail);\r\n      }\r\n\r\n      requestAnimationFrame(scope.animate.bind(scope), scope.cvsFEM);\r\n    };\r\n\r\n    this.cvsFEM.addEventListener('mousedown', mouseDown, false);\r\n    this.cvsFEM.addEventListener('mousewheel', mouseWheel, false);\r\n    this.cvsFEM.addEventListener('DOMMouseScroll', mouseWheel, false); // firefox\r\n  }\r\n\r\n  resize(width, height) {\r\n    this.cvsFEM.width = width;\r\n    this.cvsFEM.height = height;\r\n    this.transformationController.camera.changePerspective(width, height);\r\n\r\n    requestAnimationFrame(this.animate.bind(this), this.cvsFEM);\r\n  }\r\n\r\n  draw(geometry, vector) {\r\n    this.renderer.prepare(geometry, vector);\r\n    requestAnimationFrame(this.animate.bind(this), this.cvsFEM);\r\n  }\r\n\r\n  unload() {\r\n    this.renderer.modelLoaded = false;\r\n  }\r\n\r\n  animate() {\r\n    this.transformationController.update();\r\n    this.renderer.render(this.transformationController.camera, this.cvsFEM.width, this.cvsFEM.height, this.transformationController.position, this.transformationController.rotation);\r\n    //  this.transformationController.position = [0, 0, 0]; this.transformationController.rotation = [0, 0];\r\n  }\r\n\r\n  recalibrateCamera(mesh) {\r\n    const maxFrontSize = Math.max(mesh.maxX - mesh.minX, mesh.maxY - mesh.minY);\r\n    const position = [\r\n      -mesh.maxX + (mesh.maxX - mesh.minX) / 2,\r\n      -mesh.maxY + (mesh.maxY - mesh.minY) / 2,\r\n      mesh.minZ - maxFrontSize * 2\r\n    ];\r\n    const pivot = [\r\n      mesh.maxX - (mesh.maxX - mesh.minX) / 2,\r\n      mesh.maxY - (mesh.maxY - mesh.minY) / 2,\r\n      mesh.maxZ - (mesh.maxZ - mesh.minZ) / 2\r\n    ];\r\n    const nearPlane = maxFrontSize / 100.0;\r\n    const farPlane = maxFrontSize * 10;\r\n    this.camera.recalibrate(nearPlane, farPlane, position, pivot);\r\n\r\n    this.zoomSpeed = maxFrontSize / 10;\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport FEMView from \"../webgl/FEMView\";\r\nimport GLService from \"../webgl/GL\";\r\n\r\nclass MeshView extends Component {\r\n  componentDidMount(){\r\n    const canvas = this.refs.canvas;\r\n    GLService.init(canvas);\r\n    this.femView = new FEMView();\r\n    this.femView.init(canvas);\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.props.mesh){\r\n      this.femView.recalibrateCamera(this.props.mesh);\r\n      this.femView.transformationController.zoomSpeed = Math.max(this.props.mesh.maxX - this.props.mesh.minX, this.props.mesh.maxY - this.props.mesh.minY) / 10;\r\n      this.femView.draw(this.props.mesh);\r\n    }\r\n  }\r\n  render(props){\r\n    return (\r\n      <canvas id='cvsFEM' ref=\"canvas\"></canvas>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MeshView;","//This 'THREE' is needed for loading Color\r\nwindow.THREE = {};\r\n\r\nrequire(\"three/src/math/Color\");\r\n\r\nexport default window.THREE.Color;","import Color from \"./../../webgl/Color\";\r\nimport 'whatwg-fetch';\r\n\r\nexport default {\r\n  getPalettes: getPalettes,\r\n  getMesh: getMesh\r\n};\r\n\r\n/**\r\n * GET /data/palettes.json\r\n * Gets the palletes array for legend 2D view\r\n * @returns {Promise}\r\n */\r\nexport function getPalettes() {\r\n  return fetch(\"https://s3-eu-west-1.amazonaws.com/monolit-studio/webfem/palettes.json\").then(defaultHandler).then(GetPalletesResponse);\r\n}\r\n\r\nfunction GetPalletesResponse(response) {\r\n  //turn to Color objects\r\n  response.forEach(function (palette) {\r\n    palette.steps.forEach(function (step) {\r\n      step.color = new Color(step.color[0], step.color[1], step.color[2]);\r\n    });\r\n  });\r\n  return response;\r\n}\r\n\r\n/**\r\n * GET /data/{meshName}.json\r\n * Gets viewable mesh\r\n * @param meshName {String}\r\n * @returns {Promise}\r\n */\r\nexport function getMesh(meshName) {\r\n  //return fetch(\"https://s3-eu-west-1.amazonaws.com/monolit-studio/webfem/example2.json\").then(defaultHandler);\r\n  return fetch(\"https://s3-eu-west-1.amazonaws.com/monolit-studio/webfem/example1.json\").then(defaultHandler);\r\n}\r\n\r\nfunction defaultHandler(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n  throw new Error('Network response was not ok.');\r\n}","import Color from \"./../../webgl/Color\";\r\n\r\nexport default {\r\n  prepareVector          : prepareVector,\r\n  initColorArray         : initColorArray,\r\n  scalePaletteColorValues: scalePaletteColorValues\r\n};\r\n\r\nexport function prepareVector(mesh, min, max, colorArray) {\r\n  const colors = [];\r\n  for (let i = 0; i < mesh.vectorData.length; i++) {\r\n    const color       = getColorFromArray(mesh.vectorData[i], min, max, colorArray);\r\n    colors[3 * i]     = color ? color.r : 0;\r\n    colors[3 * i + 1] = color ? color.g : 0;\r\n    colors[3 * i + 2] = color ? color.b : 0;\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function initColorArray(numColors, steps, minValue, maxValue, inverted) {\r\n  if (maxValue - minValue === 0) return [new Color(0x000000)];\r\n  const n          = !!numColors ? numColors : 1024;\r\n  const colorArray = [];\r\n  const step       = (maxValue - minValue) / n;\r\n  for (let stepVal = minValue; stepVal <= maxValue; stepVal += step) {\r\n    for (let i = 0; i < steps.length - 1; i++) {\r\n      if (stepVal >= steps[i].scaledVal && stepVal < steps[i + 1].scaledVal) {\r\n        const min      = steps[i].scaledVal;\r\n        const max      = steps[i + 1].scaledVal;\r\n        const minColor = new Color(0xffffff).setHex(\"0x\" + steps[i].color.getHexString());\r\n        const maxColor = new Color(0xffffff).setHex(\"0x\" + steps[i + 1].color.getHexString());\r\n        const color    = minColor.lerp(maxColor, (stepVal - min) / (max - min));\r\n\r\n        if (inverted) {\r\n          colorArray.unshift(color);\r\n        }\r\n        else {\r\n          colorArray.push(color);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return colorArray;\r\n}\r\n\r\nexport function getColorFromArray(alpha, min, max, array) {\r\n  if (alpha <= min || min === max) {\r\n    alpha = min;\r\n  } else if (alpha >= max) {\r\n    alpha = max;\r\n  } else {\r\n    alpha = (alpha - min) / (max - min);\r\n  }\r\n  let colorPosition = Math.round(alpha * array.length);\r\n  if (colorPosition === array.length) {\r\n    colorPosition -= 1;\r\n  }\r\n  return array[colorPosition];\r\n}\r\n\r\nexport function scalePaletteColorValues(min, max, steps) {\r\n  const newSteps = [];\r\n  for (let i = 0; i < steps.length; i++) {\r\n    newSteps.push({...steps[i], scaledVal: min + i * (max - min) / (steps.length - 1)});\r\n  }\r\n  return newSteps;\r\n}\r\n","import React from 'react';\r\nimport { getMesh } from '../services/api';\r\nimport { scalePaletteColorValues, initColorArray, prepareVector } from '../services/utilities';\r\n\r\nexport default function BtnApplyToMesh(props) {\r\n  return (\r\n    <button class=\"btn\" onClick={()=>applyToMesh(props)}>Apply to mesh</button>\r\n  );\r\n}\r\n\r\nfunction applyToMesh(props){\r\n  getMesh('example1')\r\n    .then(mesh=>{\r\n      if (!mesh.vertexData.length || !mesh.indexData.length || !mesh.vectorData.length){\r\n        alert(\"Cannot load model.\");\r\n        return;\r\n      }\r\n\r\n      try { \r\n        const {selectedPalette, numSteps, isInverted, palettes, onApplyToMesh} = props.data;\r\n        const steps = scalePaletteColorValues(mesh.minValue, mesh.maxValue, selectedPalette.steps);\r\n  \r\n        const colorArray = initColorArray(numSteps, steps, mesh.minValue, mesh.maxValue, isInverted);\r\n        mesh.colorData = prepareVector(mesh, mesh.minValue, mesh.maxValue, colorArray);\r\n        const palettesCopy = palettes.map(item=>{\r\n          if(item === selectedPalette){\r\n            return {...item, steps};\r\n          }else{\r\n            return item;\r\n          }\r\n        });\r\n        onApplyToMesh(mesh, palettesCopy);\r\n      } catch (ex) {\r\n        alert(\"Error: \" + ex.message);\r\n      }\r\n    });\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport SelectPalette from \"./SelectPalette\";\nimport LegendView from \"./LegendView\";\nimport MeshView from \"./MeshView\";\nimport {getPalettes} from \"../services/api\";\nimport BtnApplyToMesh from './BtnApplyToMesh';\n\nclass App extends Component {\n  state = {\n    toggleCurtain: false,\n    palettes: [],\n    selectedPalette: undefined,\n    isInverted: false,\n    numSteps: 512,\n    mesh: undefined\n  };\n  componentDidMount(){\n    getPalettes().then(palettes=>{\n      this.setState({palettes, selectedPalette: palettes[0]})\n    });\n  }\n\n  onPaletteChange = (id)=>{\n    this.setState({selectedPalette: this.state.palettes.find(item=>item.id === +id)});\n  }\n  onStepsChange = (e)=>{\n    this.setState({numSteps: e.target.value});\n  }\n\n  onInvertedChange = (e) =>{\n    this.setState({isInverted: e.target.value});\n  }\n\n  \n  onApplyToMesh = (mesh, palettes)=>{ \n    this.setState({mesh, palettes});\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.toggleCurtain &&\n          <div className=\"curtain\"><p>Downloading model, please wait...</p></div>\n        } \n        <div className=\"tool-panel right\">\n          <b>Palettes:</b><br/>\n          <SelectPalette palettes={this.state.palettes} selectedPalette={this.state.selectedPalette} onPaletteChange={this.onPaletteChange} /><br/>\n          Number of steps:<br/>\n          <input type=\"number\" value={this.state.numSteps} onChange={this.onStepsChange} /><br/>\n          <input type=\"checkbox\" value={this.state.isInverted} onChange={this.onInvertedChange}/>Inverted<br/>\n          <LegendView palette={this.state.selectedPalette} isInverted={this.state.isInverted} steps={this.numSteps} /><br/>\n          <BtnApplyToMesh data={{...this.state, onApplyToMesh: this.onApplyToMesh}} />\n        </div>\n        <MeshView mesh={this.state.mesh} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}